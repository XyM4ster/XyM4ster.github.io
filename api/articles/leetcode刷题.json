{"title":"leetcode刷题","uid":"2db13004f026edb4056c7fbb5f3564d1","slug":"leetcode刷题","date":"2023-12-25T02:34:41.000Z","updated":"2023-12-25T14:23:23.164Z","comments":true,"path":"api/articles/leetcode刷题.json","keywords":null,"cover":[],"content":"<h1 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h1><h2 id=\"二分法\"><a href=\"#二分法\" class=\"headerlink\" title=\"二分法\"></a>二分法</h2><h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><p>这里直接用<strong>左闭右开</strong>的写法，定义target在[left,right)区间内</p>\n<p>那么有下面几点：</p>\n<ul>\n<li><p>while(left &lt; right)，因为left &#x3D;&#x3D; right是没有意义的</p>\n</li>\n<li><p>if(nums[middle] &gt; target)，right更新为middle，正常要从middle -1 开始找，但是因为是开区间，所以从middle开始</p>\n<p><img src=\"/../leetcode%E5%88%B7%E9%A2%98/image-20231225104224852.png\" alt=\"image-20231225104224852\"></p>\n</li>\n</ul>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> left <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>right <span class=\"token operator\">-</span> left<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> target<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">return</span> mid<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> target<span class=\"token punctuation\">)</span>\n                left <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> target<span class=\"token punctuation\">)</span>\n                right <span class=\"token operator\">=</span> mid<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"双指针\"><a href=\"#双指针\" class=\"headerlink\" title=\"双指针\"></a>双指针</h2><ul>\n<li>在两头分别定义一个指针i,j</li>\n<li>循环条件<ul>\n<li>while(i &lt;&#x3D; j)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"滑动窗口\"><a href=\"#滑动窗口\" class=\"headerlink\" title=\"滑动窗口\"></a>滑动窗口</h2><ul>\n<li><p>边界条件可以定义</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">int result &#x3D; Integer.MAX_VALUE;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"适用条件\"><a href=\"#适用条件\" class=\"headerlink\" title=\"适用条件\"></a>适用条件</h3><ul>\n<li><p>当需要双重遍历解决，且是连续的情况下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">// 滑动窗口</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">minSubArrayLen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> s<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_VALUE</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> right <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> right <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> right<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            sum <span class=\"token operator\">+=</span> nums<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">>=</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                result <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> right <span class=\"token operator\">-</span> left <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                sum <span class=\"token operator\">-=</span> nums<span class=\"token punctuation\">[</span>left<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> result <span class=\"token operator\">==</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_VALUE</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h1 id=\"链表\"><a href=\"#链表\" class=\"headerlink\" title=\"链表\"></a>链表</h1><h2 id=\"双指针-1\"><a href=\"#双指针-1\" class=\"headerlink\" title=\"双指针\"></a>双指针</h2><h3 id=\"思路-1\"><a href=\"#思路-1\" class=\"headerlink\" title=\"思路\"></a>思路</h3><ul>\n<li>定义一个前驱节点pre为null，定义当前节点cur &#x3D; head</li>\n</ul>\n<h3 id=\"反转链表\"><a href=\"#反转链表\" class=\"headerlink\" title=\"反转链表\"></a>反转链表</h3><p><img src=\"/../leetcode%E5%88%B7%E9%A2%98/image-20231225215523220.png\" alt=\"image-20231225215523220\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ListNode</span> <span class=\"token function\">reverseList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ListNode</span> head<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">ListNode</span> cur <span class=\"token operator\">=</span> head<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ListNode</span> pre <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>cur <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            head <span class=\"token operator\">=</span> head<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n            cur<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> pre<span class=\"token punctuation\">;</span>\n            pre <span class=\"token operator\">=</span> cur<span class=\"token punctuation\">;</span>\n            cur <span class=\"token operator\">=</span> head<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> pre<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"虚拟头节点\"><a href=\"#虚拟头节点\" class=\"headerlink\" title=\"虚拟头节点\"></a>虚拟头节点</h2><h3 id=\"思路-2\"><a href=\"#思路-2\" class=\"headerlink\" title=\"思路\"></a>思路</h3><ul>\n<li>定义一个虚拟头节点，让虚拟头节点的next为head</li>\n</ul>\n<h1 id=\"经典题目\"><a href=\"#经典题目\" class=\"headerlink\" title=\"经典题目\"></a>经典题目</h1><h2 id=\"59-螺旋矩阵II\"><a href=\"#59-螺旋矩阵II\" class=\"headerlink\" title=\"59 螺旋矩阵II\"></a>59 螺旋矩阵II</h2><h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p><img src=\"/../leetcode%E5%88%B7%E9%A2%98/image-20231225124544024.png\" alt=\"image-20231225124544024\"></p>\n<h3 id=\"思路-3\"><a href=\"#思路-3\" class=\"headerlink\" title=\"思路\"></a>思路</h3><ul>\n<li><p>定义边界：一个非常重要的思想是<strong>参考二分法，定义左闭右开</strong></p>\n<ul>\n<li><p>也就是在遍历矩阵时，定义第一行只访问[1,4)</p>\n</li>\n<li><p>4由遍历列时访问</p>\n<p><img src=\"/../leetcode%E5%88%B7%E9%A2%98/image-20231225124850395.png\" alt=\"image-20231225124850395\"></p>\n</li>\n</ul>\n</li>\n<li><p>特殊点：</p>\n<ul>\n<li>当n是奇数时，中间的心是遍历不到的，所以需要指定它的值</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">generateMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span> <span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> l <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    \n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>\n                j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>\n                i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">></span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>\n                j<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n                count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">></span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>\n                i<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n                count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            l<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            r<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            i <span class=\"token operator\">=</span> l<span class=\"token punctuation\">;</span>\n            j <span class=\"token operator\">=</span> l<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            arr<span class=\"token punctuation\">[</span>n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> n <span class=\"token operator\">*</span> n<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n        \n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h1>","text":"数组二分法思路这里直接用左闭右开的写法，定义target在[left,right)区间内 那么有下面几点： while(left &lt; right)，因为left &#x3D;&#x3D; right是没有意义的 if(nums[middle] &gt; target)，ri...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E5%88%86%E6%B3%95\"><span class=\"toc-text\">二分法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">思路</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">代码</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%8C%E6%8C%87%E9%92%88\"><span class=\"toc-text\">双指针</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3\"><span class=\"toc-text\">滑动窗口</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%82%E7%94%A8%E6%9D%A1%E4%BB%B6\"><span class=\"toc-text\">适用条件</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%93%BE%E8%A1%A8\"><span class=\"toc-text\">链表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%8C%E6%8C%87%E9%92%88-1\"><span class=\"toc-text\">双指针</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF-1\"><span class=\"toc-text\">思路</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8\"><span class=\"toc-text\">反转链表</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%99%9A%E6%8B%9F%E5%A4%B4%E8%8A%82%E7%82%B9\"><span class=\"toc-text\">虚拟头节点</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF-2\"><span class=\"toc-text\">思路</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%BB%8F%E5%85%B8%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">经典题目</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#59-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5II\"><span class=\"toc-text\">59 螺旋矩阵II</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF-3\"><span class=\"toc-text\">思路</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81-1\"><span class=\"toc-text\">代码</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\"></span></a></li></ol>","author":{"name":"XyM4ster","slug":"blog-author","avatar":"/images/picture.jpg","link":"/","description":"热爱网络安全的BITer","socials":{"github":"https://github.com/XyM4ster","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"汇编指令","uid":"0eefe6b6118865b181e289b1081cce4b","slug":"汇编指令","date":"2024-01-06T07:18:53.000Z","updated":"2024-01-06T14:17:05.439Z","comments":true,"path":"api/articles/汇编指令.json","keywords":null,"cover":null,"text":"汇编指令Q：PUSHAD (将所有寄存器的值压入栈) PUSHAD &#x2F;&#x2F;是一个x86汇编指令，用于将通用寄存器（EAX、ECX、EDX、EBX、ESP、EBP、ESI、EDI）的值依次压入堆栈中。该指令的作用 &#x2F;&#x2F;是保存这些寄存器的值，以便...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"汇编","slug":"汇编","count":1,"path":"api/tags/汇编.json"}],"author":{"name":"XyM4ster","slug":"blog-author","avatar":"/images/picture.jpg","link":"/","description":"热爱网络安全的BITer","socials":{"github":"https://github.com/XyM4ster","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"re-engineer-core-principle-03","uid":"449c952c21adaaa0689becdb96065fd3","slug":"re-engineer-core-principle-03","date":"2023-12-05T02:11:20.000Z","updated":"2024-02-29T10:45:19.161Z","comments":true,"path":"api/articles/re-engineer-core-principle-03.json","keywords":null,"cover":"/medias/pexels-luis-gomes-546819.jpg","text":"引言 第三部分冲冲冲 这一部分要把没见过的汇编单独整理到一个文档里 0x21 Windows消息钩取21.1 钩子(Hook)Q：钩子 就是偷看或截取信息所有的手段或者工具 21.2 消息钩子Q：常规Windows信息流 发生键盘输人事件时，WM_KEYDOWN消息被添加到[OS...","link":"","photos":[],"count_time":{"symbolsCount":"49k","symbolsTime":"44 mins."},"categories":[],"tags":[{"name":"re","slug":"re","count":7,"path":"api/tags/re.json"}],"author":{"name":"XyM4ster","slug":"blog-author","avatar":"/images/picture.jpg","link":"/","description":"热爱网络安全的BITer","socials":{"github":"https://github.com/XyM4ster","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}